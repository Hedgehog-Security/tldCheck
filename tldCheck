#!/bin/bash

domain=$1
brand=$2

# Logs
reviewlog="manual-review.log"
hitlog="dns-hits.log"
brandhit="brand-hits.log"

# Colours
R='\033[0;31m'
G='\033[0;32m'
O='\033[0;33m'
B='\033[0;34m'
NC='\033[0m'

spin='-\|/'

spinner() {
                printf "${G}[-]${NC} Checking DNS entries...\n "
                i=0
                while kill -0 $pid 2>/dev/null
                do
                        i=$(( (i+1) %4 ))
                        printf "\r${spin:$i:1}"
                        sleep .1
                done
}

banner() {
        clear
	count=`cat tlds.txt|wc -l`
        printf "${O}---------------------------------------------------------------------------------\n"
        printf "${O}| Welcome to Pete's dns analysis script.                                        |\n"
        printf "${O}| Copyright (c) 2010-2017 Hedgehog Security.                                    |\n"
        printf "${O}|                                                                               |\n"
        printf "${O}| Contact: research@hedgehogsecurity.gi                                         |\n"
        printf "${O}| Version: 1.0                                                                  |\n"
        printf "${O}---------------------------------------------------------------------------------\n"
        printf "\n \n"
        printf "${O}Peter says always keep your Kali instance up to date...\n"
        printf "\n \n"
	printf "${G}[+]${NC} Checking DNS entries for $domain and checking content for $brand\n"
	printf "${G}[+]${NC}  - checking $count tld's\n"
}


	banner
	for i in `cat tlds.txt`
		do 
			printf "${G}[+]${NC} Testing $1.$i\n"
			output=`dig $1.$i|grep $1.$i|grep -v ';'`
			if [[ $output ]]; then
				printf "${O}[+]${NC} - DNS Records foundMatch on $1.$i - checking for content.\n"
				echo "$1.$i" >> $hitlog
				pageOutput=`curl -s $1.$i|grep $1.$i` 
				if [[ $pageOutput ]]; then
					brandCheck=`curl -s $1.$i|grep "$brand"`
					if [[ $brandCheck ]]; then
						printf "${R}[!]${NC} - Manual review required on http://$1.$i - possible content found.\n"
						echo "$1.$i" >> $reviewlog
					else
                                                printf "${G}[-]${NC} - No content found.\n"
						echo "$1.$i" >> $brandhit
					fi
                                        brandCheck=`curl -k -s https://$1.$i|grep "$brand"`
                                        if [[ $brandCheck ]]; then
                                                printf "${R}[!]${NC} - Manual review required on https://$1.$i - possible content found.\n"
                                                echo "$1.$i" >> $reviewlog
                                        else
                                                printf "${G}[-]${NC} - No content found.\n"
                                                echo "$1.$i" >> $brandhit
                                        fi
                                fi
				printf "${O}[-]${NC} - Prepending with www and re-checking.\n"
				output=`dig www.$1.$i|grep www.$1.$i|grep -v ';'`
                        	if [[ $output ]]; then
                                	printf "${R}[!]${NC} - Match on www.$1.$i - checking for content.\n"
                                	echo "www.$1.$i" >> $hitlog
                                	pageOutput=`curl -s www.$1.$i|grep www.$1.$i` 
                                	if [[ $pageOutput ]]; then
						brandCheck=`curl -s $1.$i|grep "$brand"`
                                        	if [[ $brandCheck ]]; then
                                                	printf "${R}[!]${NC} - Manual review required on http://www.$1.$i - possible content found.\n"
                                                	echo "$1.$i" >> $reviewlog
                                        	else
                                                printf "${G}[-]${NC} - No content found.\n"
                                                	echo "$1.$i" >> $brandhit
						fi
					fi 
                                        brandCheck=`curl -k -s https://$1.$i|grep "$brand"`
                                        if [[ $brandCheck ]]; then
                                                printf "${R}[!]${NC} - Manual review required on https://www.$1.$i - possible content found.\n"
                                                echo "$1.$i" >> $reviewlog
                                        else
                                                printf "${G}[-]${NC} - No content found.\n"
                                                echo "$1.$i" >> $brandhit
                                        fi
				else
                                       printf "${G}[-]${NC} - No content found. Moving on.\n"
				fi
			fi
		done
	printf "${G}[=]${NC} All done.\n"
